{"version":3,"sources":["components/Header.js","components/Poster.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","style","expand","class","href","src","alt","width","height","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","React","Component","Poster","props","fetchmovie","val","a","url","fetch","response","json","data","setState","movie","results","loading","movieslist","state","console","log","search_value","updatevalue","bind","handlesubmit","e","this","target","value","type","placeholder","onChange","Button","onClick","colSpan","map","todo","key","poster_path","vote_average","release_date","overview","Falseload","variant","Footer","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0SAiCeA,E,uKA3BR,OACC,6BACA,kBAACC,EAAA,EAAD,CAAQC,MAAO,CAAC,gBAAkB,WAAYC,OAAO,MACvC,uBAAGC,MAAM,OAAOC,KAAK,KACrB,yBAAKC,IAAI,kIAAkIC,IAAI,4BAA4BC,MAAM,MAAMC,OAAO,QACpM,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBACzB,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,CAAUX,KAAK,KAAI,uBAAGH,MAAO,CAAC,MAAQ,UAAnB,WACnB,kBAACY,EAAA,EAAIE,KAAL,CAAUX,KAAK,KAAI,uBAAGH,MAAO,CAAC,MAAQ,UAAnB,aACnB,kBAACY,EAAA,EAAIE,KAAL,CAAUX,KAAK,KAAI,uBAAGH,MAAO,CAAC,MAAQ,UAAnB,WAEf,kBAACe,EAAA,EAAD,CAAcC,MAAM,OAAOL,GAAG,sBAC1B,kBAACI,EAAA,EAAYE,KAAb,CAAkBd,KAAK,KAAvB,cACA,kBAACY,EAAA,EAAYE,KAAb,CAAkBd,KAAK,KAAvB,gBACA,kBAACY,EAAA,EAAYE,KAAb,CAAkBd,KAAK,KAAvB,WACA,kBAACY,EAAA,EAAYE,KAAb,CAAkBd,KAAK,KAAvB,gB,GAlBfe,IAAMC,W,yCCArBC,E,kDACJ,WAAYC,GACX,IAAD,8BAAE,cAAMA,IAgBRC,WAhBA,uCAgBa,WAAMC,GAAN,mBAAAC,EAAA,6DACLC,EAAI,2GAA2GF,EAD1G,SAEYG,MAAMD,GAFlB,cAELE,EAFK,gBAGOA,EAASC,OAHhB,OAGLC,EAHK,OAKX,EAAKC,SAAS,CAACC,MAAMF,EAAKG,QAAQC,SAAQ,IAC1C,EAAKC,WAAW,EAAKC,MAAMJ,MAC3BK,QAAQC,IAAI,EAAKH,YAPN,4CAhBb,sDACE,EAAKC,MAAM,CACXG,aAAa,GACbP,MAAM,GACNE,SAAS,GAEX,EAAKC,WAAW,GAChB,EAAKK,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKlB,WAAW,EAAKA,WAAWkB,KAAhB,gBAChB,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBATlB,E,wDAWYE,GACVC,KAAKb,SAAS,CACZQ,aAAaI,EAAEE,OAAOC,U,mCAYbH,GACbC,KAAKrB,WAAWqB,KAAKR,MAAMG,cACzBK,KAAKb,SAAS,CACZQ,aAAa,O,+BAIX,OACE,6BACE,yBAAKzB,UAAU,UACX,yBAAKA,UAAU,cACb,wCACA,kGAEF,yBAAKA,UAAU,UACf,2BACAiC,KAAK,OACLC,YAAY,gCACZF,MAAOF,KAAKR,MAAMG,aAClBU,SAAUL,KAAKJ,cAGf,kBAACU,EAAA,EAAD,CAAQtC,GAAG,eAAemC,KAAK,SAASI,QAASP,KAAKF,cAAc,wCAIxE,6BACCE,KAAKR,MAAMF,UAAYU,KAAKR,MAAMJ,MAC/B,6BACE,kBAAC,EAAD,OAGF,6BACR,2BAAO7B,MAAM,SACb,+BACE,4BACE,wBAAIiD,QAAQ,KAAZ,sBAGJ,+BACGR,KAAKR,MAAMJ,MAAMqB,KAAI,SAAAC,GAAI,OACxB,wBAAIC,IAAKD,EAAK1C,IACZ,4BACE,yBAAKP,IAAK,kCAAkCiD,EAAKE,YAAalD,IAAI,0BAEpE,4BACA,wCAAgBgD,EAAKrC,OACrB,6BACA,yCAAiBqC,EAAKG,cACtB,6BACA,uBAAGxD,MAAO,CAAC,MAAQ,SAAnB,gBAA0CqD,EAAKI,cAC/C,6BACA,uBAAGzD,MAAO,CAAC,MAAQ,OAAO,aAAe,QAASqD,EAAKK,wB,GA/EhDxC,IAAMC,WA8FrBwC,E,uKAEF,OACE,yBAAK9C,UAAU,aACb,yBAAKX,MAAM,uBACT,yBAAKA,MAAM,UACT,+DAAoC,qDAApC,KAAoE,sDAApE,8BAA8H,kDAA9H,yIACA,kBAAC+C,EAAA,EAAD,CAAQW,QAAQ,WAAhB,YAGF,yBAAK1D,MAAM,UACT,4BACE,kDACA,6DACA,wGACA,uEACA,kDACA,8E,GAjBUgB,IAAMC,WA0BfC,ICnDAyC,E,uKAhEP,OACE,6BACD,4BAAQhD,UAAU,iBACjB,6BACA,yBAAKX,MAAM,QACT,yBAAKE,IAAI,qIAAqIC,IAAI,4BAA4BC,MAAM,MAAMC,OAAO,OAG/L,uBAAGL,MAAM,UAAUC,KAAK,kCAAxB,uBAIJ,6BACE,0CACA,4BACE,4BAAI,uBAAGA,KAAK,yBAAR,eACJ,4BAAI,uBAAGA,KAAK,0CAAR,eACJ,4BAAI,uBAAGA,KAAK,wBAAR,mBACJ,4BAAI,uBAAGA,KAAK,qCAAR,QACJ,4BAAI,uBAAGA,KAAK,iCAAiC2D,IAAI,YAA7C,oBAGR,6BACE,4CACA,4BACE,4BAAI,uBAAG3D,KAAK,yBAAwB,0BAAMD,MAAM,mCAA5C,wBACJ,4BAAI,uBAAGC,KAAK,wBAAR,2BACJ,4BAAI,uBAAGA,KAAK,6BAAR,kBACJ,4BAAI,uBAAGA,KAAK,0BAAR,sBAGR,6BACE,yCACA,4BACE,4BAAI,uBAAGA,KAAK,sDAAR,eACJ,4BAAI,uBAAGA,KAAK,2BAAR,gBACJ,4BAAI,uBAAGA,KAAK,+BAAR,gBACJ,4BAAI,uBAAGA,KAAK,iCAAkC2D,IAAI,YAA9C,cAGR,6BACE,qCACA,4BACE,4BAAI,uBAAG3D,KAAK,sDAAR,iBACJ,4BAAI,uBAAGA,KAAK,kDAAR,qBACJ,4BAAI,uBAAGA,KAAK,kCAAR,uBAKV,yBAAKU,UAAU,gBACf,uBAAGX,MAAM,OAAOC,KAAK,KACrB,yBAAKC,IAAI,kIAAkIC,IAAI,4BAA4BC,MAAM,MAAMC,OAAO,QAE9L,uBAAGJ,KAAK,KAAI,uBAAGQ,GAAG,cAAN,6B,GA3DCO,IAAMC,WCeZ4C,E,uKAVb,OACE,yBAAKlD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPYK,IAAMC,WCMJ6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.9c8c7777.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport {Navbar,Nav,NavDropdown} from 'react-bootstrap';\r\nclass Header extends React.Component{\r\n   render(){\r\n       return(\r\n        <div>\r\n        <Navbar style={{\"backgroundColor\":\"#0d253f\"}} expand=\"lg\">\r\n                      <a class=\"logo\" href=\"/\">\r\n                      <img src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\" alt=\"The Movie Database (TMDb)\" width=\"154\" height=\"20\"/></a>                            \r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/\"><b style={{\"color\":\"white\"}}>Movies</b></Nav.Link>\r\n                            <Nav.Link href=\"/\"><b style={{\"color\":\"white\"}}>TV Shows</b></Nav.Link>\r\n                            <Nav.Link href=\"/\"><b style={{\"color\":\"white\"}}>People</b></Nav.Link>\r\n\r\n                                <NavDropdown  title=\"More\" id=\"basic-nav-dropdown\" >\r\n                                    <NavDropdown.Item href=\"/\">Discussion</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"/\" >Leader board</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"/\" >Support</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"/\" >API</NavDropdown.Item>\r\n                               </NavDropdown>\r\n                        </Nav>\r\n                        \r\n                    </Navbar.Collapse>\r\n        </Navbar>\r\n        </div>\r\n       )\r\n   } \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport {Button} from 'react-bootstrap';\r\nclass Poster extends React.Component{\r\n  constructor(props)\r\n  { super(props);\r\n    this.state={\r\n    search_value:'',\r\n    movie:'',\r\n    loading :true\r\n  }\r\n  this.movieslist=[]\r\n  this.updatevalue=this.updatevalue.bind(this);\r\n  this.fetchmovie=this.fetchmovie.bind(this);\r\n  this.handlesubmit=this.handlesubmit.bind(this);\r\n  }\r\n  updatevalue(e){\r\n    this.setState({\r\n      search_value:e.target.value\r\n    })\r\n  }\r\n  fetchmovie = async val =>{\r\n    const url=\"https://api.themoviedb.org/3/search/movie?api_key=d272326e467344029e68e3c4ff0b4059&language=en-US&query=\"+val;\r\n    const response = await fetch(url);\r\n    const data =await response.json();\r\n    //console.log(JSON.stringify(data));\r\n    this.setState({movie:data.results,loading:false})\r\n    this.movieslist=this.state.movie;\r\n    console.log(this.movieslist);\r\n  }\r\n  handlesubmit(e){\r\n  this.fetchmovie(this.state.search_value);\r\n    this.setState({\r\n      search_value:''\r\n    })\r\n  }\r\n    render(){\r\n        return(\r\n          <div>\r\n            <div className=\"poster\">\r\n                <div className=\"title_head\">\r\n                  <h2>Welcome.</h2>\r\n                  <h3>Millions of movies, TV shows and people to discover. Explore now.</h3>\r\n                </div>\r\n                <div className=\"search\">\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Search for movie,Tv shows ...\"\r\n                value={this.state.search_value}\r\n                onChange={this.updatevalue}\r\n                />\r\n                \r\n                <Button id=\"search-input\" type=\"button\" onClick={this.handlesubmit}><b>search</b></Button>\r\n                \r\n              </div>\r\n            </div>\r\n            <div>\r\n            {this.state.loading || !this.state.movie ? (\r\n                <div>\r\n                  <Falseload/>\r\n                </div>\r\n            ):(\r\n                <div>\r\n        <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"2\">Search results..</th>  \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.movie.map(todo => (\r\n            <tr key={todo.id}>\r\n              <td>\r\n                <img src={\"https://image.tmdb.org/t/p/w500\"+todo.poster_path} alt=\"Poster not available\"/>\r\n              </td>\r\n              <td>\r\n              <b>Title:&nbsp;{todo.title}</b>  \r\n              <br/>\r\n              <b>Rating:&nbsp;{todo.vote_average}</b>\r\n              <br/>\r\n              <p style={{\"color\":\"grey\"}}>Release Date:{todo.release_date}</p>\r\n              <br/>\r\n              <b style={{\"color\":\"grey\",\"marginBottom\":\"0px\"}}>{todo.overview}</b> \r\n              </td>               \r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n                    </div>\r\n                \r\n            )}\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Falseload extends React.Component{\r\n  render() {\r\n    return (\r\n      <div className=\"falseload\">\r\n        <div class=\"column_content flex\">\r\n          <div class=\"column\">\r\n            <h5>Get access to maintain your own <em>custom personal lists</em>, <em>track what you've seen</em> and search and filter for <em>what to watch next</em>—regardless if it's in theatres, on TV or available on popular streaming services like Netflix, Amazon Prime Video, and Hotstar.</h5>\r\n            <Button variant=\"primary\">Sign Up</Button>\r\n          </div>\r\n\r\n          <div class=\"column\">\r\n            <ul>\r\n              <li>Enjoy TMDb ad free</li>\r\n              <li>Maintain a personal watchlist</li>\r\n              <li>Filter by your subscribed streaming services and find something to watch</li>\r\n              <li>Log the movies and TV shows you've seen</li>\r\n              <li>Build custom lists</li>\r\n              <li>Contribute to and improve our database</li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Poster;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\nclass Footer extends React.Component{\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n         <footer className=\"single-column\">\r\n          <nav>\r\n          <div class=\"join\">\r\n            <img src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" alt=\"The Movie Database (TMDb)\" width=\"130\" height=\"94\"/>\r\n  \r\n            \r\n              <a class=\"rounded\" href=\"/account/signup?language=en-US\">Join the Community</a>\r\n            \r\n          </div>\r\n  \r\n          <div>\r\n            <h4>The Basics</h4>\r\n            <ul>\r\n              <li><a href=\"/about?language=en-US\">About TMDb</a></li>\r\n              <li><a href=\"/about/staying-in-touch?language=en-US\">Contact Us</a></li>\r\n              <li><a href=\"/talk?language=en-US\">Support Forums</a></li>\r\n              <li><a href=\"/documentation/api?language=en-US\">API</a></li>\r\n              <li><a href=\"https://status.themoviedb.org/\" rel=\"noopener\">System Status</a></li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h4>Get Involved</h4>\r\n            <ul>\r\n              <li><a href=\"/bible?language=en-US\"><span class=\"glyphicons glyphicons-asterisk\"></span> Contribution Bible</a></li>\r\n              <li><a href=\"/apps?language=en-US\">3rd Party Applications</a></li>\r\n              <li><a href=\"/movie/new?language=en-US\">Add New Movie</a></li>\r\n              <li><a href=\"/tv/new?language=en-US\">Add New TV Show</a></li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h4>Community</h4>\r\n            <ul>\r\n              <li><a href=\"/documentation/community/guidelines?language=en-US\">Guidelines</a></li>\r\n              <li><a href=\"/discuss?language=en-US\">Discussions</a></li>\r\n              <li><a href=\"/leaderboard?language=en-US\">Leaderboard</a></li>\r\n              <li><a href=\"https://twitter.com/themoviedb\"  rel=\"noopener\">Twitter</a></li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h4>Legal</h4>\r\n            <ul>\r\n              <li><a href=\"/documentation/website/terms-of-use?language=en-US\">Terms of Use</a></li>\r\n              <li><a href=\"/documentation/api/terms-of-use?language=en-US\">API Terms of Use</a></li>\r\n              <li><a href=\"/privacy-policy?language=en-US\">Privacy Policy</a></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        </footer>\r\n        <div className=\"small-footer\">\r\n        <a class=\"logo\" href=\"/\">\r\n        <img src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\" alt=\"The Movie Database (TMDb)\" width=\"154\" height=\"20\"/>\r\n        </a>  \r\n        <a href=\"/\"><p id=\"small-comm\">\r\n            JOIN THE COMMUNITY\r\n        </p>   \r\n        </a>                                   \r\n        </div>\r\n        </div>             \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","//https://api.themoviedb.org/3/search/movie?api_key=d272326e467344029e68e3c4ff0b4059&language=en-US&query=spiderman\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Poster from './components/Poster';\nimport Footer from './components/Footer';\nclass App extends React.Component {\n \n render(){\n  return (\n    <div className=\"App\">\n      <Header />\n      <Poster />\n      <Footer/>\n    </div>\n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}